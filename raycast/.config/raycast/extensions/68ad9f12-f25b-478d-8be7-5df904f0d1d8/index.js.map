{
  "version": 3,
  "sources": ["../src/index.tsx"],
  "sourcesContent": ["import { ActionPanel, List, showToast, Action, Toast, Detail, open } from \"@raycast/api\";\nimport { exec } from \"child_process\";\n\nexport default function Command() {\n  return (\n    <List>\n      <List.Item\n        title=\"Top Left\"\n        icon=\"TL.png\"\n        actions={\n          <ActionPanel>\n            <Action.Push title=\"Configure This Corner\" target={<CornerSettings corner=\"TL\" />} />\n          </ActionPanel>\n        }\n      />\n      <List.Item\n        title=\"Top Right\"\n        icon=\"TR.png\"\n        actions={\n          <ActionPanel>\n            <Action.Push title=\"Configure This Corner\" target={<CornerSettings corner=\"TR\" />} />\n          </ActionPanel>\n        }\n      />\n      <List.Item\n        title=\"Bottom Left\"\n        icon=\"BL.png\"\n        actions={\n          <ActionPanel>\n            <Action.Push title=\"Configure This Corner\" target={<CornerSettings corner=\"BL\" />} />\n          </ActionPanel>\n        }\n      />\n      <List.Item\n        title=\"Bottom Right\"\n        icon=\"BR.png\"\n        actions={\n          <ActionPanel>\n            <Action.Push title=\"Configure This Corner\" target={<CornerSettings corner=\"BR\" />} />\n          </ActionPanel>\n        }\n      />\n      <List.Item\n        title=\"Disable All Corners\"\n        icon=\"Disable.png\"\n        actions={\n          <ActionPanel>\n            <Action title=\"Disable All\" onAction={disableAllHotcorners} />\n          </ActionPanel>\n        }\n      />\n      <List.Item\n        title=\"Help\"\n        icon=\"help.png\"\n        actions={\n          <ActionPanel>\n            <Action.Push title=\"Show Help\" target={<HelpView />} />\n          </ActionPanel>\n        }\n      />\n    </List>\n  );\n}\n\ninterface CornerSettingsProps {\n  corner: CornerType;\n}\n\n// \u5B9A\u4E49\u4E00\u4E2A\u7C7B\u578B\uFF0C\u7528\u4E8E\u9650\u5236 corner \u7684\u53EF\u80FD\u503C\ntype CornerType = \"TL\" | \"TR\" | \"BL\" | \"BR\";\n\nfunction CornerSettings({ corner }: CornerSettingsProps) {\n  const readableCornerName = getReadableCornerName(corner);\n\n  return (\n    <List>\n      <List.Section title={`${readableCornerName} Corner`}>\n        <List.Item\n          title=\"Disable\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 1)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Mission Control\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 2)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Application Windows\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 3)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Desktop\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 4)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Notification Center\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 12)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Launchpad\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 11)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Quick Note\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 14)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Start ScreenSaver\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 5)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Disable ScreenSaver\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 6)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Put Display to Sleep\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 10)} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          title=\"Lock Screen\"\n          actions={\n            <ActionPanel>\n              <Action title=\"Confirm\" onAction={() => setCorner(corner, 13)} />\n            </ActionPanel>\n          }\n        />\n      </List.Section>\n    </List>\n  );\n}\n\n// \u5C06\u89D2\u843D\u7684\u7F29\u5199\u8F6C\u6362\u4E3A\u5B8C\u6574\u7684\u540D\u79F0\nfunction getReadableCornerName(corner: CornerType): string {\n  const cornerNames: Record<CornerType, string> = {\n    TL: \"Top Left\",\n    TR: \"Top Right\",\n    BL: \"Bottom Left\",\n    BR: \"Bottom Right\",\n  };\n\n  return cornerNames[corner];\n}\n\n// \u5173\u95ED\u67D0\u4E2A\u89E6\u53D1\u89D2\nfunction setCorner(corner: string, option: number) {\n  const appleScriptCommand = `defaults write com.apple.dock wvous-${corner.toLowerCase()}-corner -int ${option} && killall Dock`;\n\n  exec(appleScriptCommand, async (error, stdout, stderr) => {\n    if (error) {\n      console.error(`\u6267\u884C\u51FA\u9519: ${error.message}`);\n      await showToast(Toast.Style.Failure, \"Failed\", error.message);\n      return;\n    }\n    if (stderr) {\n      console.error(`\u9519\u8BEF\u8F93\u51FA: ${stderr}`);\n      await showToast(Toast.Style.Failure, \"Error\", stderr);\n      return;\n    }\n    await showToast(Toast.Style.Success, \"Done\");\n  });\n\n  console.log(`Setting ${corner} with option ${option}`);\n}\n\n// \u5173\u95ED\u5168\u90E8\u89E6\u53D1\u89D2\nfunction disableAllHotcorners() {\n  const disableCommand =\n    \"defaults write com.apple.dock wvous-tl-corner -int 0 && \" +\n    \"defaults write com.apple.dock wvous-tr-corner -int 0 && \" +\n    \"defaults write com.apple.dock wvous-bl-corner -int 0 && \" +\n    \"defaults write com.apple.dock wvous-br-corner -int 0 && \" +\n    \"killall Dock\";\n\n  exec(disableCommand, async (error, stdout, stderr) => {\n    if (error) {\n      console.error(`\u6267\u884C\u51FA\u9519: ${error.message}`);\n      await showToast(Toast.Style.Failure, \"Failed\", error.message);\n      return;\n    }\n    if (stderr) {\n      console.error(`\u9519\u8BEF\u8F93\u51FA: ${stderr}`);\n      await showToast(Toast.Style.Failure, \"Error\");\n      return;\n    }\n    await showToast(Toast.Style.Success, \"All Hot Corners Disabled\");\n  });\n}\n\n// \u65B0\u589E\u5E2E\u52A9\u89C6\u56FE\u7EC4\u4EF6\nfunction HelpView() {\n  const markdownContent = `\n# Help\n## System requirements\nHotCorner only works on macOS Sonama for now. \n\n## If HotCorner doesn't work\nHotCorner requires Automation permission enable for Raycast to function properly.\nHere is how to enable:\n\n**STEP1** Open Security & Privacy Panel in System Preference  \nHit ENTER now to open the System Preference panel or navigate manually to System Preferences -> Security & Privacy -> Privacy -> Automation.  \n  \n**STEP2** Enable the toggle for \"System Events\" under Raycast.\n![System Preference](SystemPreference.png)\n\n## Screen Blinking\nSince restarting the \"dock\" process is required to apply changes, a brief screen blinking may occur. This is normal and poses no harm to your device.\n\n## Contact for help\nIf you encounter any issues or have feature requests, please feel free to send an email to me at: makiclin@gmail.com\n\n  `;\n\n  return (\n    <Detail\n      markdown={markdownContent}\n      actions={\n        <ActionPanel>\n          <Action title=\"Open System Preference\" onAction={OpenSecurityPrivacyAction} />\n        </ActionPanel>\n      }\n    />\n  );\n}\n\n//\u6253\u5F00\u7CFB\u7EDF\u8BBE\u7F6E\nfunction OpenSecurityPrivacyAction() {\n  const handleOpenSecurityPrivacy = () => {\n    // macOS URL \u65B9\u6848\u7528\u4E8E\u6253\u5F00\u5B89\u5168\u6027\u4E0E\u9690\u79C1\u8BBE\u7F6E\n    open(\"x-apple.systempreferences:com.apple.preference.security\");\n  };\n\n  handleOpenSecurityPrivacy();\n}\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "Command", "__toCommonJS", "import_api", "import_child_process", "import_jsx_runtime", "CornerSettings", "disableAllHotcorners", "HelpView", "corner", "readableCornerName", "getReadableCornerName", "setCorner", "option", "appleScriptCommand", "error", "stdout", "stderr", "OpenSecurityPrivacyAction"]
}
