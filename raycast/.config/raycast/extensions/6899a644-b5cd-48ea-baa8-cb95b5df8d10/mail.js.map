{
  "version": 3,
  "sources": ["../src/mail.tsx", "../src/wrapper.tsx"],
  "sourcesContent": ["import { Action, ActionPanel, LaunchProps, List } from \"@raycast/api\";\nimport Wrapper from \"./wrapper\";\n\ninterface Props {\n  address: string;\n}\n\nconst actions = [\n  {\n    title: \"Send by Gmail\",\n    action: \"https://mail.google.com/mail/?view=cm&fs=1&tf=1&to=\",\n  },\n  {\n    title: \"Send by Outlook\",\n    action: \"https://outlook.live.com/owa/?path=/mail/action/compose&to=\",\n  },\n  {\n    title: \"Send by Yahoo\",\n    action: \"https://compose.mail.yahoo.com/?to=\",\n  },\n  {\n    title: \"Send by Yandex\",\n    action: \"https://mail.yandex.com/compose?to=\",\n  },\n  {\n    title: \"Send by AOL\",\n    action: \"https://mail.aol.com/webmail-std/en-us/suite#/mail/compose-message?to=\",\n  },\n  {\n    title: \"Send by Zoho\",\n    action: \"https://mail.zoho.com/mail/addressexists.do?to=\",\n  },\n  {\n    title: \"Send by Mail.com\",\n    action: \"https://mail.com/mail/addressexists.do?to=\",\n  },\n  {\n    title: \"Send by ProtonMail\",\n    action: \"https://mail.protonmail.com/compose?to=\",\n  },\n  {\n    title: \"Send by iCloud\",\n    action: \"https://www.icloud.com/#mail?to=\",\n  },\n];\n\nconst Email = (props: LaunchProps<{ arguments: Props }>) => {\n  const { address } = props.arguments;\n\n  const items = actions.map((action) => (\n    <List.Item\n      subtitle={address}\n      key={action.title}\n      title={action.title}\n      actions={\n        <ActionPanel>\n          <Action.OpenInBrowser title=\"Open in Browser\" url={action.action + address} />\n        </ActionPanel>\n      }\n    />\n  ));\n\n  return <Wrapper provider=\"Mail\" variable={address} items={items} />;\n};\n\nexport default Email;\n", "import { Action, ActionPanel, List } from \"@raycast/api\";\n\ninterface Props {\n  variable: string;\n  items?: JSX.Element[];\n  provider: \"Mail\";\n}\n\nconst Wrapper = (props: Props) => {\n  const { items, variable, provider } = props;\n\n  const resolveProvider = (provider: string) => {\n    const tree = {\n      Mail: \"mailto:\" + variable,\n    };\n\n    return tree[provider as keyof typeof tree];\n  };\n\n  return (\n    <List>\n      <List.Item\n        subtitle={variable}\n        title=\"Send message to\"\n        actions={\n          <ActionPanel>\n            <Action.OpenInBrowser title=\"Open in Browser\" url={resolveProvider(provider)} />\n          </ActionPanel>\n        }\n      />\n\n      {items || null}\n    </List>\n  );\n};\n\nexport default Wrapper;\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAuD,wBCAvD,IAAAC,EAA0C,wBAoBtCC,EAAA,6BAZEC,EAAWC,GAAiB,CAChC,GAAM,CAAE,MAAAC,EAAO,SAAAC,EAAU,SAAAC,CAAS,EAAIH,EAEhCI,EAAmBD,IACV,CACX,KAAM,UAAYD,CACpB,GAEYC,CAA6B,EAG3C,SACE,QAAC,QACC,oBAAC,OAAK,KAAL,CACC,SAAUD,EACV,MAAM,kBACN,WACE,OAAC,eACC,mBAAC,SAAO,cAAP,CAAqB,MAAM,kBAAkB,IAAKE,EAAgBD,CAAQ,EAAG,EAChF,EAEJ,EAECF,GAAS,MACZ,CAEJ,EAEOI,EAAQN,EDoBL,IAAAO,EAAA,6BAjDJC,EAAU,CACd,CACE,MAAO,gBACP,OAAQ,qDACV,EACA,CACE,MAAO,kBACP,OAAQ,6DACV,EACA,CACE,MAAO,gBACP,OAAQ,qCACV,EACA,CACE,MAAO,iBACP,OAAQ,qCACV,EACA,CACE,MAAO,cACP,OAAQ,wEACV,EACA,CACE,MAAO,eACP,OAAQ,iDACV,EACA,CACE,MAAO,mBACP,OAAQ,4CACV,EACA,CACE,MAAO,qBACP,OAAQ,yCACV,EACA,CACE,MAAO,iBACP,OAAQ,kCACV,CACF,EAEMC,EAASC,GAA6C,CAC1D,GAAM,CAAE,QAAAC,CAAQ,EAAID,EAAM,UAEpBE,EAAQJ,EAAQ,IAAKK,MACzB,OAAC,OAAK,KAAL,CACC,SAAUF,EAEV,MAAOE,EAAO,MACd,WACE,OAAC,eACC,mBAAC,SAAO,cAAP,CAAqB,MAAM,kBAAkB,IAAKA,EAAO,OAASF,EAAS,EAC9E,GALGE,EAAO,KAOd,CACD,EAED,SAAO,OAACC,EAAA,CAAQ,SAAS,OAAO,SAAUH,EAAS,MAAOC,EAAO,CACnE,EAEOG,EAAQN",
  "names": ["mail_exports", "__export", "mail_default", "__toCommonJS", "import_api", "import_api", "import_jsx_runtime", "Wrapper", "props", "items", "variable", "provider", "resolveProvider", "wrapper_default", "import_jsx_runtime", "actions", "Email", "props", "address", "items", "action", "wrapper_default", "mail_default"]
}
