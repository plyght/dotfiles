{
  "version": 3,
  "sources": ["../node_modules/sound-play/build/main.js", "../src/dino.jsx"],
  "sourcesContent": ["module.exports=function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){const{exec:n}=t(1),o=t(2).promisify(n);e.exports={play:async(e,r=.5)=>{const t=\"darwin\"===process.platform?Math.min(2,2*r):r,n=\"darwin\"===process.platform?((e,r)=>`afplay \"${e}\" -v ${r}`)(e,t):((e,r)=>`powershell -c Add-Type -AssemblyName presentationCore; $player = New-Object system.windows.media.mediaplayer; ${(e=>`$player.open('${e}');`)(e)} $player.Volume = ${r}; $player.Play(); Start-Sleep 1; Start-Sleep -s $player.NaturalDuration.TimeSpan.TotalSeconds;Exit;`)(e,t);try{await o(n)}catch(e){throw e}}}},function(e,r){e.exports=require(\"child_process\")},function(e,r){e.exports=require(\"util\")}]);", "import { Detail, ActionPanel, Action, environment, Icon } from \"@raycast/api\";\nimport { useEffect, useState, useRef } from \"react\";\nimport sound from \"sound-play\";\n\nexport default function ChromeDino() {\n  const Status = {\n    PLAYING: \"playing\",\n    GAMEOVER: \"gameover\",\n  };\n\n  let playSound = (name) => {\n    sound.play(environment.assetsPath + \"/sfx/\" + name);\n  };\n\n  const cactiShapes = [\n    `\n  \u2584\u2588\u2584\n\u2588 \u2588\u2588\u2588\n\u2580\u2580\u2588\u2588\u2588\n   \u2588\u2588`,\n    `\n\u2584\u2588\u2584  \n\u2588\u2588\u2588 \u2588\n\u2588\u2588\u2588\u2580\u2580\n\u2588\u2588\u2588  `,\n    `\n\u2588\u2588   \n\u2588\u2588\u2588 \u2588\n\u2588\u2588\u2588\u2580\u2580\n\u2588\u2588   `,\n    `\n  \u2588\u2588   \n\u2588 \u2588\u2588\u2588\n\u2580\u2580\u2588\u2588\u2588\n   \u2588\u2588`,\n    `\n     \u2588  \n\u2588\u2588 \u2580\u2588\u2588 \n\u2588\u2588\u2580 \u2588\u2588\u2580\n\u2588\u2588  \u2588\u2588 `,\n  ];\n  const cloudShapes = [\n    `\n   \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591`,\n    `\n  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591`,\n    `\n \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591`,\n    `\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n   \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591`,\n  ];\n\n  const dinoRunFrames = [\n    `\n        \u2584\u2588\u2580\u2588\u2588\u2588\u2588\u2584\n        \u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580\n   \u2584   \u2584\u2588\u2588\u2580\u2580\u2580\u2580\u2580 \n   \u2580\u2588\u2584\u2588\u2588\u2588\u2588\u2584     \n    \u2580\u2588\u2588\u2588\u2588\u2580      \n     \u2588\u2584 \u2580\u2580      `,\n    `\n        \u2584\u2588\u2580\u2588\u2588\u2588\u2588\u2584\n        \u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580\n   \u2584   \u2584\u2588\u2588\u2580\u2580\u2580\u2580\u2580 \n   \u2580\u2588\u2584\u2588\u2588\u2588\u2588\u2584     \n    \u2580\u2588\u2588\u2588\u2588\u2580      \n     \u2580\u2580 \u2588\u2584      `,\n  ];\n\n  const dinoJumpFrame = `\n        \u2584\u2588\u2580\u2588\u2588\u2588\u2588\u2584\n        \u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580\n   \u2584   \u2584\u2588\u2588\u2580\u2580\u2580\u2580\u2580 \n   \u2580\u2588\u2584\u2588\u2588\u2588\u2588\u2584     \n    \u2580\u2588\u2588\u2588\u2588\u2580      \n     \u2588\u2584 \u2588\u2584      `;\n\n  const dinoHitFrame = `\n        \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2584\n        \u2588\u2588X\u2588\u2588\u2588\u2588\u2588\n   \u2584   \u2584\u2588\u2588\u2580\u2580\u2580\u2580\u2580 \n   \u2580\u2588\u2584\u2588\u2588\u2588\u2588\u2584     \n    \u2580\u2588\u2588\u2588\u2588\u2580      \n     \u2588\u2584 \u2588\u2584      `;\n\n  const gameOver = `\n                  \n G A M E  O V E R \n                  \n   \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584   \n   \u2588\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2588\u2588   \n   \u2588\u2588\u2588\u2588\u2580\u2588\u2588\u2588 \u2588\u2588\u2588   \n   \u2588\u2588\u2588\u2584 \u2584\u2584\u2584\u2584\u2588\u2588\u2588   \n   \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580   \n                  \n     `;\n\n  let boardWidth = environment.textSize === \"medium\" ? 106 : 92;\n  let boardHeight = environment.textSize === \"medium\" ? 20 : 17;\n  let [markdown, setMarkdown] = useState(\n    Array(boardHeight)\n      .fill()\n      .map(() => Array(boardWidth).fill(\" \")),\n  );\n  let status = useRef(Status.PLAYING);\n  let time = useRef(0);\n  let dinoStatus = useRef({\n    y: 0,\n    gravity: 0,\n  });\n  let isTicking = useRef(false);\n  let activeCacti = useRef([]);\n  let activeClouds = useRef([]);\n  let score = useRef(0);\n  function getRandomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  useEffect(() => {\n    if (!isTicking.current) {\n      tick();\n      isTicking.current = true;\n    }\n  }, []);\n\n  let tick = () => {\n    if (time.current % 5 === 0) {\n      if (score.current > 0 && score.current % 100 === 0) {\n        playSound(\"dinoCoinSFX.mov\");\n      }\n      score.current += 1;\n    }\n    if (status.current === Status.PLAYING) {\n      dinoStatus.current.y = Math.round(Math.max(dinoStatus.current.y + dinoStatus.current.gravity, 0));\n      if (time.current === 60) {\n        activeCacti.current.push({\n          x: boardWidth,\n          shape: cactiShapes[Math.floor(Math.random() * cactiShapes.length)],\n          time: time.current,\n        });\n      }\n      if (time.current > 60 && time.current - activeCacti.current.at(-1).time > 40) {\n        if (Math.random() < 0.02) {\n          activeCacti.current.push({\n            x: boardWidth,\n            shape: cactiShapes[Math.floor(Math.random() * cactiShapes.length)],\n            time: time.current,\n          });\n        }\n      }\n      if (time.current > 60 && time.current - activeCacti.current.at(-1).time > 100) {\n        activeCacti.current.push({\n          x: boardWidth,\n          shape: cactiShapes[Math.floor(Math.random() * cactiShapes.length)],\n          time: time.current,\n        });\n      }\n\n      if (time.current % 70 === 0) {\n        activeClouds.current.push({\n          x: boardWidth,\n          y: getRandomNumber(0, 5),\n          shape: cloudShapes[Math.floor(Math.random() * cloudShapes.length)],\n        });\n      }\n      if (dinoStatus.current.y !== 0) {\n        dinoStatus.current.gravity -= 1 / 5;\n      }\n      let frame;\n      if (dinoStatus.current.y !== 0) {\n        frame = dinoJumpFrame.split(\"\\n\").map((x) => x.split(\"\"));\n      } else {\n        frame = dinoRunFrames[Math.floor(time.current / 5) % 2].split(\"\\n\").map((x) => x.split(\"\"));\n      }\n\n      let newMarkdown = Array(boardHeight)\n        .fill()\n        .map(() => Array(boardWidth).fill(\" \"));\n      newMarkdown[16] = Array(boardWidth).fill(\"_\");\n\n      for (let i = 0; i < activeCacti.current.length; i++) {\n        let cactus = activeCacti.current[i];\n\n        // ! SPEED CURVE\n        cactus.x -= 1 + ((score.current - 10) * 0.02) / 10;\n\n        let cactusFrame = cactus.shape.split(\"\\n\").map((x) => x.split(\"\"));\n        for (let i = 0; i < cactusFrame.length; i++) {\n          for (let j = 0; j < cactusFrame[i].length; j++) {\n            if (\n              cactusFrame[i][j + Math.floor(cactus.x)] !== \" \" &&\n              j + Math.floor(cactus.x) > 0 &&\n              j + Math.floor(cactus.x) < boardWidth - 1\n            ) {\n              newMarkdown[i + 12][j + Math.floor(cactus.x)] = cactusFrame[i][j];\n            }\n          }\n        }\n        if (cactus.x < -200) {\n          activeCacti.current.splice(i, 1);\n        }\n      }\n\n      for (let i = 0; i < activeClouds.current.length; i++) {\n        let cloud = activeClouds.current[i];\n        cloud.x -= 0.5;\n        let cloudFrame = cloud.shape.split(\"\\n\").map((x) => x.split(\"\"));\n        for (let i = 0; i < cloudFrame.length; i++) {\n          for (let j = 0; j < cloudFrame[i].length; j++) {\n            if (\n              cloudFrame[i][j + Math.floor(cloud.x)] !== \" \" &&\n              j + Math.floor(cloud.x) > 0 &&\n              j + Math.floor(cloud.x) < boardWidth - 1\n            ) {\n              newMarkdown[i + cloud.y][j + Math.floor(cloud.x)] = cloudFrame[i][j];\n            }\n          }\n        }\n        if (cloud.x < -20) {\n          activeClouds.current.splice(i, 1);\n        }\n      }\n\n      for (let i = 0; i < frame.length; i++) {\n        for (let j = 0; j < frame[i].length; j++) {\n          if (frame[i][j] !== \" \" && i + -dinoStatus.current.y + 10 > 0) {\n            if ([\"_\", \" \", \"\u2591\"].includes(newMarkdown[i + -dinoStatus.current.y + 10][j])) {\n              newMarkdown[i + -dinoStatus.current.y + 10][j] = frame[i][j];\n            } else {\n              playSound(\"dinoEndSFX.mov\");\n              status.current = Status.GAMEOVER;\n              break;\n            }\n          }\n        }\n        if (status.current == Status.GAMEOVER) break;\n      }\n\n      if (status.current === Status.GAMEOVER) {\n        let dinoHitFrameProcessed = dinoHitFrame.split(\"\\n\").map((x) => x.split(\"\"));\n        for (let i = 0; i < dinoHitFrameProcessed.length; i++) {\n          for (let j = 0; j < dinoHitFrameProcessed[i].length; j++) {\n            if (dinoHitFrameProcessed[i][j] !== \" \" && i + -dinoStatus.current.y + 10 > 0) {\n              newMarkdown[i + -dinoStatus.current.y + 10][j] = dinoHitFrameProcessed[i][j];\n            }\n          }\n        }\n\n        let endScreen = gameOver.split(\"\\n\").map((x) => x.split(\"\"));\n        for (let i = 0; i < endScreen.length; i++) {\n          for (let j = 0; j < endScreen[i].length; j++) {\n            newMarkdown[i + Math.floor(boardHeight / 2 - endScreen.length / 2)][\n              j + Math.floor(boardWidth / 2 - endScreen[i].length / 2)\n            ] = endScreen[i][j];\n          }\n        }\n      }\n\n      let scoreString = `SCORE: ${score.current}`.split(\"\").reverse().join(\"\");\n      for (let i = 0; i < scoreString.length; i++) {\n        newMarkdown[1][newMarkdown[0].length - 1 - i] = scoreString[i];\n      }\n      setMarkdown(newMarkdown);\n\n      time.current++;\n      setTimeout(tick, 25);\n    } else {\n      isTicking.current = false;\n    }\n  };\n\n  let jump = () => {\n    if (dinoStatus.current.y === 0) {\n      playSound(\"dinoJumpSFX.mov\");\n      dinoStatus.current.gravity = 2.25;\n    }\n  };\n\n  let enter = () => {\n    if (status.current === Status.PLAYING) {\n      jump();\n    }\n    if (status.current === Status.GAMEOVER) {\n      playSound(\"dinoJumpSFX.mov\");\n      time.current = 0;\n      dinoStatus.current = {\n        y: 0,\n        gravity: 0,\n      };\n      activeCacti.current = [];\n      activeClouds.current = [];\n      score.current = 0;\n      status.current = Status.PLAYING;\n      if (!isTicking.current) {\n        tick();\n        isTicking.current = true;\n      }\n    }\n  };\n\n  return (\n    <Detail\n      actions={\n        <ActionPanel>\n          <Action\n            icon={status.current === Status.PLAYING ? Icon.ArrowUp : Icon.RotateClockwise}\n            title={status.current === Status.PLAYING ? \"Jump\" : \"Restart\"}\n            onAction={() => {\n              enter();\n            }}\n          />\n        </ActionPanel>\n      }\n      markdown={`\\n\\`\\`\\`${markdown.map((x) => x.join(\"\")).join(\"\\n\")}\\n\\`\\`\\``}\n    ></Detail>\n  );\n}\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "e", "r", "t", "n", "o", "dino_exports", "__export", "ChromeDino", "__toCommonJS", "import_api", "import_react", "import_sound_play", "Status", "playSound", "name", "sound", "cactiShapes", "cloudShapes", "dinoRunFrames", "dinoJumpFrame", "dinoHitFrame", "gameOver", "boardWidth", "boardHeight", "markdown", "setMarkdown", "status", "time", "dinoStatus", "isTicking", "activeCacti", "activeClouds", "score", "getRandomNumber", "min", "max", "tick", "frame", "x", "newMarkdown", "i", "cactus", "cactusFrame", "j", "cloud", "cloudFrame", "dinoHitFrameProcessed", "endScreen", "scoreString", "jump", "enter"]
}
